{"version":3,"sources":["mesh.js"],"names":["chroma","require","gfx","cc","Class","extends","Component","editor","executeInEditMode","properties","start","lighten","lightenDirection","c1","color","c2","vfmtPosColor","VertexFormat","name","ATTR_POSITION","type","ATTR_TYPE_FLOAT32","num","ATTR_COLOR","ATTR_TYPE_UINT8","normalize","mesh","Mesh","init","setVertices","v3","_minPos","_maxPos","updateColor","Color","RED","BLUE","setIndices","renderer","node","getComponent","MeshRenderer","addComponent","update","dt","CC_EDITOR","hsl","fromHEX","toString"],"mappings":"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","file":"mesh.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\cases\\3d","sourcesContent":["const chroma = require('chroma');\n\nlet gfx = cc.gfx;\n\ncc.Class({\n    extends: cc.Component,\n\n    editor: {\n        executeInEditMode: true\n    },\n\n    properties: {\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n        this.lighten = 0;\n        this.lightenDirection = 1;\n        this.c1 = cc.color();\n        this.c2 = cc.color();\n\n        var vfmtPosColor = new gfx.VertexFormat([\n            { name: gfx.ATTR_POSITION, type: gfx.ATTR_TYPE_FLOAT32, num: 3 },\n            { name: gfx.ATTR_COLOR, type: gfx.ATTR_TYPE_UINT8, num: 4, normalize: true },\n        ]);\n        \n        let mesh = new cc.Mesh();\n        mesh.init(vfmtPosColor, 8, true);\n        this.mesh = mesh;\n        \n        mesh.setVertices(gfx.ATTR_POSITION, [\n            cc.v3(-100, 100, 100), cc.v3(-100, -100, 100), cc.v3(100, 100, 100), cc.v3(100, -100, 100),\n            cc.v3(-100, 100, -100), cc.v3(-100, -100, -100), cc.v3(100, 100, -100), cc.v3(100, -100, -100)\n        ]);\n\n        mesh._minPos = cc.v3(-100, -100, -100);\n        mesh._maxPos = cc.v3(100, 100, 100);\n\n        this.updateColor(cc.Color.RED, cc.Color.BLUE);\n\n        mesh.setIndices([\n            0, 1, 2, 1, 3, 2, // front\n            0, 6, 4, 0, 2, 6, // top\n            2, 7, 6, 2, 3, 7, // right\n            0, 5, 4, 0, 1, 5, // left\n            1, 7, 5, 1, 3, 7, // bottm,\n            4, 5, 6, 5, 7, 6, // back\n        ]);\n\n        let renderer = this.node.getComponent(cc.MeshRenderer);\n        if (!renderer) {\n            renderer = this.node.addComponent(cc.MeshRenderer);\n        }\n        renderer.mesh = mesh;\n    },\n\n    updateColor (c1, c2) {\n        this.mesh.setVertices(gfx.ATTR_COLOR, [\n            c1, c1, c1, c1,\n            c2, c2, c2, c2,\n        ]);\n    },\n\n    update (dt) {\n        if (CC_EDITOR) return;\n\n        let c1 = chroma.hsl(330, 1, this.lighten);\n        let c2 = chroma.hsl(100, 1, (1-this.lighten));\n\n        this.lighten += dt * 0.1 * this.lightenDirection;\n        if ((this.lighten > 1 && this.lightenDirection > 0) || \n            (this.lighten < 0 && this.lightenDirection < 0)) {\n            this.lightenDirection *= -1;\n        }\n        \n        this.c1.fromHEX(c1.toString());\n        this.c2.fromHEX(c2.toString());\n        this.updateColor(this.c1, this.c2);\n    },\n});\n"]}
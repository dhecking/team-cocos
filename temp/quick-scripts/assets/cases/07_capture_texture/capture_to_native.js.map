{"version":3,"sources":["capture_to_native.js"],"names":["cc","Class","extends","require","properties","_width","_height","start","init","schedule","picData","initImage","createCanvas","label","string","saveFile","data","texture","readPixels","width","height","filpYImage","Texture2D","initWithData","spriteFrame","SpriteFrame","setTexture","node","Node","sprite","addComponent","Sprite","zIndex","macro","MAX_ZINDEX","parent","director","getScene","winSize","x","y","on","EventType","TOUCH_START","destroy","captureAction","CC_JSB","filePath","jsb","fileUtils","getWritablePath","success","saveImageData","log","error","Uint8Array","rowBytes","row","srow","reStart","i"],"mappings":"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","file":"capture_to_native.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\cases\\07_capture_texture","sourcesContent":["cc.Class({\n    extends: require('./textureRenderUtils'),\n\n    properties: {\n        _width: 0,\n        _height: 0\n    },\n\n    start () {\n        this.init();\n        // create the capture\n        this.schedule(() => {\n            let picData = this.initImage();\n            this.createCanvas(picData);\n            this.label.string = 'Showing the capture'\n            this.saveFile(picData);\n        }, 1, 0);\n    },\n    \n    // override\n    initImage () { \n        let data = this.texture.readPixels();\n        this._width = this.texture.width;\n        this._height = this.texture.height;\n        let picData = this.filpYImage(data, this._width, this._height);\n        return picData;\n    },\n\n    // override init with Data\n    createCanvas (picData) {\n        let texture = new cc.Texture2D();\n        texture.initWithData(picData, 32, this._width, this._height);\n\n        let spriteFrame = new cc.SpriteFrame();\n        spriteFrame.setTexture(texture);\n\n        let node = new cc.Node();\n        let sprite = node.addComponent(cc.Sprite);\n        sprite.spriteFrame = spriteFrame;\n\n        node.zIndex = cc.macro.MAX_ZINDEX;\n        node.parent = cc.director.getScene();\n        // set position\n        let width = cc.winSize.width;\n        let height = cc.winSize.height;\n        node.x = width / 2;\n        node.y = height / 2;\n        node.on(cc.Node.EventType.TOUCH_START, () => {\n            node.parent = null;\n            this.label.string = '';\n            node.destroy();\n        });\n\n        this.captureAction(node, width, height);\n    },\n\n    saveFile (picData) {\n        if (CC_JSB) {\n            let filePath = jsb.fileUtils.getWritablePath() + 'render_to_sprite_image.png';\n\n            let success = jsb.saveImageData(picData, this._width, this._height, filePath)\n            if (success) {\n                cc.log(\"save image data success, file: \" + filePath);\n            }\n            else {\n                cc.error(\"save image data failed!\");\n            }\n        }\n    },\n\n    // This is a temporary solution\n    filpYImage (data, width, height) {\n        // create the data array\n        let picData = new Uint8Array(width * height * 4);\n        let rowBytes = width * 4;\n        for (let row = 0; row < height; row++) {\n            let srow = height - 1 - row;\n            let start = srow * width * 4;\n            let reStart = row * width * 4;\n            // save the piexls data\n            for (let i = 0; i < rowBytes; i++) {\n                picData[reStart + i] = data[start + i];\n            }\n        }\n        return picData;\n    }\n}); \n"]}
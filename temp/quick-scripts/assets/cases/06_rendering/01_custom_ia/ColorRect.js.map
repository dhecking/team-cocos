{"version":3,"sources":["ColorRect.js"],"names":["assembler","require","gfx","math","_prevMat","_currMat","InputAssembler","cc","game","once","EVENT_ENGINE_INITED","vmath","renderer","mat4","create","ColorRect","Class","extends","RenderComponent","properties","blColor","Color","brColor","tlColor","trColor","_updateVertexData","matrix","verts","_vData","uintV","_uintVData","w","node","width","h","height","appx","anchorX","appy","anchorY","a","m00","b","m01","c","m04","d","m05","tx","m12","ty","m13","x","y","i","_val","_vb","update","_createIA","device","_vertexFormat","VertexFormat","name","ATTR_POSITION","type","ATTR_TYPE_FLOAT32","num","ATTR_COLOR","ATTR_TYPE_UINT8","normalize","Float32Array","Uint32Array","buffer","_iData","Uint16Array","VertexBuffer","USAGE_DYNAMIC","_ib","IndexBuffer","INDEX_FMT_UINT16","USAGE_STATIC","length","getWorldMatrix","_ia","_vertexBuffer","_indexBuffer","_start","_count","onEnable","_super","_renderFlag","RenderFlow","FLAG_RENDER","FLAG_CUSTOM_IA_RENDER","onLoad","setMaterial","Material","getBuiltinMaterial","_assembler","module","exports"],"mappings":"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","file":"ColorRect.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\cases\\06_rendering\\01_custom_ia","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nlet assembler = require('./ColorRectAssembler');\nlet gfx;\nlet math;\nlet _prevMat;\nlet _currMat;\nlet InputAssembler;\n\ncc.game.once(cc.game.EVENT_ENGINE_INITED, function () {\n    gfx = cc.gfx;\n    math = cc.vmath;\n    InputAssembler = cc.renderer.InputAssembler;\n\n    _prevMat = math.mat4.create();\n    _currMat = math.mat4.create();\n})\n\nlet ColorRect = cc.Class({\n    extends: cc.RenderComponent,\n\n    properties: {\n        blColor: cc.Color,\n        brColor: cc.Color,\n        tlColor: cc.Color,\n        trColor: cc.Color,\n    },\n\n    _updateVertexData (matrix) {\n        let verts = this._vData,\n            uintV = this._uintVData;\n        let w = this.node.width,\n            h = this.node.height,\n            appx = w * this.node.anchorX,\n            appy = h * this.node.anchorY;\n        let a = matrix.m00, b = matrix.m01, c = matrix.m04, d = matrix.m05,\n            tx = matrix.m12, ty = matrix.m13;\n\n        let x, y, i = 0;\n        \n        // bl\n        x = -appx;\n        y = -appy;\n        verts[i++] = x * a + y * c + tx;\n        verts[i++] = x * b + y * d + ty;\n        // color._val is rgba packed into uint32\n        uintV[i++] = this.blColor._val;\n        // br\n        x = w - appx;\n        y = -appy;\n        verts[i++] = x * a + y * c + tx;\n        verts[i++] = x * b + y * d + ty;\n        uintV[i++] = this.brColor._val;\n        // tl\n        x = -appx;\n        y = h - appy;\n        verts[i++] = x * a + y * c + tx;\n        verts[i++] = x * b + y * d + ty;\n        uintV[i++] = this.tlColor._val;\n        // tr\n        x = w - appx;\n        y = h - appy;\n        verts[i++] = x * a + y * c + tx;\n        verts[i++] = x * b + y * d + ty;\n        uintV[i++] = this.trColor._val;\n\n        this._vb.update(0, verts);\n    },\n\n    _createIA () {\n        let device = cc.renderer.device;\n        // Vertex format defines vertex buffer layout: x, y, color\n        this._vertexFormat = new gfx.VertexFormat([\n            { name: gfx.ATTR_POSITION, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },\n            { name: gfx.ATTR_COLOR, type: gfx.ATTR_TYPE_UINT8, num: 4, normalize: true }\n        ]);\n\n        // six float for each vertex\n        this._vData = new Float32Array(3 * 4);\n        this._uintVData = new Uint32Array(this._vData.buffer);\n        this._iData = new Uint16Array([0, 1, 2, 1, 3, 2]);\n\n        this._vb = new gfx.VertexBuffer(\n            device,\n            this._vertexFormat,\n            gfx.USAGE_DYNAMIC,\n            // array buffer with real data\n            null,\n            // vertex count\n            4\n        );\n        this._ib = new gfx.IndexBuffer(\n            device,\n            gfx.INDEX_FMT_UINT16,\n            gfx.USAGE_STATIC,\n            this._iData,\n            // index count\n            this._iData.length\n        );\n\n        this.node.getWorldMatrix(_currMat);\n        this._updateVertexData(_currMat);\n\n        this._ia = new InputAssembler();\n        this._ia._vertexBuffer = this._vb;\n        this._ia._indexBuffer = this._ib;\n        this._ia._start = 0;\n        this._ia._count = this._iData.length;\n    },\n\n    onEnable () {\n        this._super();\n\n        this.node._renderFlag &= ~cc.RenderFlow.FLAG_RENDER;\n        this.node._renderFlag |= cc.RenderFlow.FLAG_CUSTOM_IA_RENDER;\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n    onLoad () {\n        this.setMaterial(0, cc.Material.getBuiltinMaterial('2d-base'));\n\n        this._createIA();\n    },\n\n    update () {\n        this.node.getWorldMatrix(_currMat);\n        if (_currMat.m00 !== _prevMat.m00 || \n            _currMat.m01 !== _prevMat.m01 ||\n            _currMat.m04 !== _prevMat.m04 ||\n            _currMat.m05 !== _prevMat.m05 ||\n            _currMat.m12 !== _prevMat.m12 ||\n            _currMat.m13 !== _prevMat.m13) \n        {\n            this._updateVertexData(_currMat);\n        }\n    }\n});\n\nColorRect._assembler = assembler;\n\nmodule.exports = ColorRect;"]}
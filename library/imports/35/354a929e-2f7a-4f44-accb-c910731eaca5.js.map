{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\assets\\cases\\05_scripting\\11_network\\downloader-native/assets\\cases\\05_scripting\\11_network\\downloader-native\\DownloaderCtrl.js"],"names":["cc","Class","extends","Component","properties","label","Label","sprite","Sprite","imgUrl","txtUrl","tempImgUrl","audioUrl","_downloader","_imgTask","_txtTask","_audioTask","_storagePath","_inited","_downloading","onLoad","CC_JSB","string","jsb","Downloader","setOnFileTaskSuccess","onSucceed","bind","setOnTaskProgress","onProgress","setOnTaskError","onError","fileUtils","getWritablePath","createDirectory","_audioID","task","audioEngine","stop","requestURL","loader","load","storagePath","err","tex","spriteFrame","SpriteFrame","node","active","content","getStringFromFile","substr","clip","play","bytesReceived","totalBytesReceived","totalBytesExpected","errorCode","errorCodeInternal","errorStr","downloadImg","createDownloadFileTask","loadImg","error","console","log","downloadTxt","downloadAudio","onDisable"],"mappings":"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","file":"DownloaderCtrl.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\cases\\05_scripting\\11_network\\downloader-native","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        label: cc.Label,\n        sprite: cc.Sprite,\n        imgUrl: \"http://tools.itharbors.com/res/logo.png\",\n        txtUrl: \"https://raw.githubusercontent.com/cocos-creator/tutorial-dark-slash/master/LICENSE.md\",\n        tempImgUrl: \"http://www.cocos.com/wp-content/uploads/2018/03/%E9%BB%98%E8%AE%A4%E6%A0%87%E9%A2%98_%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BA%95%E9%83%A8%E4%BA%8C%E7%BB%B4%E7%A0%81_2018.03.08.png\",\n        audioUrl: \"http://tools.itharbors.com/christmas/res/sounds/ss.mp3\",\n        _downloader: null,\n        _imgTask: null,\n        _txtTask: null,\n        _audioTask: null,\n        _storagePath: \"\",\n        _inited: false,\n        _downloading: false\n    },\n\n\n    // use this for initialization\n    onLoad () {\n        if (!CC_JSB) {\n            this.label.string = 'Downloader is a NATIVE ONLY feature.';\n            return;\n        }\n\n        this._downloader = new jsb.Downloader();\n        this._downloader.setOnFileTaskSuccess(this.onSucceed.bind(this));\n        this._downloader.setOnTaskProgress(this.onProgress.bind(this));\n        this._downloader.setOnTaskError(this.onError.bind(this));\n        this._storagePath = jsb.fileUtils.getWritablePath() + '/example-cases/downloader/';\n        this._inited = jsb.fileUtils.createDirectory(this._storagePath);\n        if (!this._inited) {\n            this.label.string = 'Failed to create storage path, downloader won\\'t work correctly';\n        }\n        this._audioID = -1;\n    },\n\n    onSucceed (task) {\n        if (this._audioID !== -1) {\n            cc.audioEngine.stop(this._audioID);\n        }\n        switch (task.requestURL) {\n        case this.imgUrl:\n            cc.loader.load(task.storagePath, (err, tex) => {\n                this.sprite.spriteFrame = new cc.SpriteFrame(tex);\n                this.sprite.node.active = true;\n                this.label.node.active = false;\n            });\n            break;\n        case this.txtUrl:\n            let content = jsb.fileUtils.getStringFromFile(task.storagePath);\n            this.sprite.node.active = false;\n            this.label.node.active = true;\n            this.label.string = content.substr(0, 350);\n            break;\n        case this.audioUrl:\n            this.sprite.node.active = false;\n            this.label.node.active = true;\n            this.label.string = 'Audio Download Complete.';\n            cc.loader.load(task.storagePath, (err, clip) => {\n                this._audioID = cc.audioEngine.play(clip);\n            });\n        }\n        // download success\n        this._downloading = false;\n    },\n\n    onProgress (task, bytesReceived, totalBytesReceived, totalBytesExpected) {\n\n    },\n\n    onError (task, errorCode, errorCodeInternal, errorStr) {\n        this._downloading = false;\n        this.sprite.node.active = false;\n        this.label.node.active = true;\n        this.label.string = 'Failed to download file (' + task.requestURL + '): ' + errorStr + '(' + errorCode + ')';\n    },\n\n    downloadImg () {\n        if (!this.imgUrl || !this._inited || this._downloading) {\n            return;\n        }\n        this.sprite.node.active = false;\n        this.label.node.active = true;\n        this.label.string = 'Downloading image';\n        this._imgTask = this._downloader.createDownloadFileTask(this.imgUrl, this._storagePath + 'download1.png');\n        this._downloading = true;\n    },\n\n    loadImg () {\n        if (!this.tempImgUrl || !this._inited || this._downloading) {\n            return;\n        }\n\n        this._downloading = true;\n        this.label.string = 'Downloading image (mem)';\n        cc.loader.load(this.tempImgUrl, (error, tex) => {\n            this._downloading = false;\n            if (error) {\n                console.log(\"Load remote image failed: \" + error);\n            }\n            else {\n                this.sprite.spriteFrame = new cc.SpriteFrame(tex);\n                this.sprite.node.active = true;\n                this.label.node.active = false;\n                cc.audioEngine.stop(this._audioID);\n            }\n        });\n    },\n\n    downloadTxt () {\n        if (!this.txtUrl || !this._inited || this._downloading) {\n            return;\n        }\n        this.label.node.active = true;\n        this.sprite.node.active = false;\n        this.label.string = 'Downloading Text';\n        this._downloading = true;\n        this._txtTask = this._downloader.createDownloadFileTask(this.txtUrl, this._storagePath + 'imagine.txt');\n    },\n\n    downloadAudio () {\n        if (!this.audioUrl || !this._inited || this._downloading) {\n            return;\n        }\n        this.sprite.node.active = false;\n        this.label.node.active = true;\n        this.label.string = 'Downloading Audio';\n        this._downloading = true;\n        this._audioTask = this._downloader.createDownloadFileTask(this.audioUrl, this._storagePath + 'audioTest.mp3');\n    },\n\n    onDisable () {\n        cc.audioEngine.stop(this._audioID);\n    }\n\n});\n"]}
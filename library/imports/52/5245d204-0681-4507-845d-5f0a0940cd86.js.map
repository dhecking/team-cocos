{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\cases\\native_call\\Native_Call/assets\\cases\\native_call\\Native_Call\\NativeCallCtrl.js"],"names":["tips","cc","TestNativeCallJS","string","Class","extends","Component","properties","button","Node","start","tipNode","find","getComponent","Label","onClick","sys","os","OS_ANDROID","className","methodName","methodSignature","jsb","reflection","callStaticMethod","OS_IOS","OS_OSX"],"mappings":";;;;;;AAAA,IAAIA,OAAO,IAAX;AACAC,GAAGC,gBAAH,GAAsB,YAAY;AAC9BF,SAAKG,MAAL,GAAc,4BAAd;AACH,CAFD;;AAIAF,GAAGG,KAAH,CAAS;AACLC,aAASJ,GAAGK,SADP;;AAGLC,gBAAY;AACRC,gBAAQP,GAAGQ;AADH,KAHP;;AAOLC,SAPK,mBAOI;AACL,YAAIC,UAAUV,GAAGW,IAAH,CAAQ,kBAAR,CAAd;AACAZ,eAAOW,QAAQE,YAAR,CAAqBZ,GAAGa,KAAxB,CAAP;AACAd,aAAKG,MAAL,GAAc,kBAAd;AACH,KAXI;AAaLY,WAbK,qBAaM;AACP,YAAId,GAAGe,GAAH,CAAOC,EAAP,KAAchB,GAAGe,GAAH,CAAOE,UAAzB,EAAqC;AACjC,gBAAIC,YAAY,qCAAhB;AACA,gBAAIC,aAAa,iBAAjB;AACA,gBAAIC,kBAAkB,yCAAtB;AACAC,gBAAIC,UAAJ,CAAeC,gBAAf,CAAgCL,SAAhC,EAA2CC,UAA3C,EAAuDC,eAAvD,EAAwE,OAAxE,EAAiF,kBAAjF;AACH,SALD,MAMK,IAAIpB,GAAGe,GAAH,CAAOC,EAAP,KAAchB,GAAGe,GAAH,CAAOS,MAArB,IAA+BxB,GAAGe,GAAH,CAAOC,EAAP,KAAchB,GAAGe,GAAH,CAAOU,MAAxD,EAAgE;AACjEJ,gBAAIC,UAAJ,CAAeC,gBAAf,CAAgC,eAAhC,EAAiD,8BAAjD,EAAiF,OAAjF,EAA0F,kBAA1F;AACH;AACJ;AAvBI,CAAT","file":"NativeCallCtrl.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\cases\\native_call\\Native_Call","sourcesContent":["let tips = null;\ncc.TestNativeCallJS = function () {\n    tips.string = 'The test was successful...';\n};\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        button: cc.Node\n    },\n\n    start () {\n        var tipNode = cc.find(\"Canvas/New Label\");\n        tips = tipNode.getComponent(cc.Label);\n        tips.string = 'Native Call Test';\n    },\n\n    onClick () {\n        if (cc.sys.os === cc.sys.OS_ANDROID) {\n            let className = \"org/cocos2dx/javascript/AppActivity\";\n            let methodName = \"showAlertDialog\";\n            let methodSignature = \"(Ljava/lang/String;Ljava/lang/String;)V\";\n            jsb.reflection.callStaticMethod(className, methodName, methodSignature, \"Title\", \"Native Call Test\");\n        }\n        else if (cc.sys.os === cc.sys.OS_IOS || cc.sys.os === cc.sys.OS_OSX) {\n            jsb.reflection.callStaticMethod('AppController', 'showAlertDialog:withMessage:', \"Title\", \"Native Call Test\");\n        }\n    }\n});\n"]}
{"version":3,"sources":["..\\..\\..\\..\\assets\\main menu/assets\\main menu\\Menu.js"],"names":["i18n","require","SceneList","TipsManager","MainScene","cc","Class","extends","Component","properties","text","Label","readme","ScrollView","btnInfo","Button","btnBack","testList","uiCamera","Camera","sceneTitle","searchBlock","Node","onLoad","_isLoadingScene","showDebugDraw","game","addPersistRootNode","node","currentSceneUrl","contentPos","active","loadInstruction","storage","getComponent","content","sceneList","init","cocosAnalytics","isInited","CAEvent","onEvent","eventName","director","on","Director","EVENT_AFTER_SCENE_LAUNCH","_onSceneLaunched","url","getCurrentScene","loadScene","cameras","i","l","length","camera","cullingMask","groupIndex","backToList","result","onLoadSceneFinish","bind","setCurrentScene","showReadme","getContentPosition","CALevels","begin","level","isMenu","endsWith","setContentPosition","string","replace","_getAdjacentScenes","res","next","prev","findAvailableScene","startIndex","step","sceneName","path","basename","available","hasSupport","some","item","index","nextScene","prevScene","self","urlArr","split","fileName","loader","loadRes","TextAsset","err","asset","t","event","undefined","scrollToTop","enabledDebugDraw","getCollisionManager","videoPlayer","find","restart","gc","sys","garbageCollect"],"mappings":"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","file":"Menu.js","sourceRoot":"..\\..\\..\\..\\assets\\main menu","sourcesContent":["const i18n = require('i18n');\nconst SceneList = require('SceneList');\nconst TipsManager = require('TipsManager');\n\nconst MainScene = 'TestList.fire';\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        text: cc.Label,\n        readme: cc.ScrollView,\n        btnInfo: cc.Button,\n        btnBack: cc.Button,\n        testList: cc.ScrollView,\n        uiCamera: cc.Camera,\n        sceneTitle: cc.Label,\n        searchBlock: cc.Node\n    },\n\n    onLoad: function () {\n        this._isLoadingScene = false;\n        this.showDebugDraw = false;\n        cc.game.addPersistRootNode(this.node);\n        this.currentSceneUrl = MainScene;\n        this.contentPos = null;\n        this.btnBack.node.active = false;\n        this.loadInstruction(this.currentSceneUrl);\n\n        this.storage = this.node.getComponent('StorageUtil');\n        // keep the search scene list res\n        cc.game.addPersistRootNode(this.searchBlock);\n        cc.game.addPersistRootNode(this.testList.node);\n        if (this.testList && this.testList.content) {\n            // in main scene\n            this.sceneList = this.testList.content.getComponent(SceneList);\n            this.sceneList.init(this);\n        }\n        if (typeof cocosAnalytics !== 'undefined' && cocosAnalytics.isInited && cocosAnalytics.isInited()) {\n            // Cocos Analytics service, to learn more please visit:\n            // https://analytics.cocos.com/docs/\n            cocosAnalytics.CAEvent.onEvent({\n                eventName: \"打开范例\"\n            });\n        }\n\n        cc.director.on(cc.Director.EVENT_AFTER_SCENE_LAUNCH, this._onSceneLaunched, this);\n\n        let url = this.storage.getCurrentScene();\n        if (url) {\n            this.loadScene(url);\n        }\n    },\n\n    _onSceneLaunched () {\n        let cameras = cc.Camera.cameras;\n        for (let i = 0, l = cameras.length; i < l; i++) {\n            let camera = cameras[i];\n            if (camera === this.uiCamera) {\n                camera.cullingMask = 1 << this.node.groupIndex;\n            }\n            else {\n                camera.cullingMask = camera.cullingMask & (~(1 << this.node.groupIndex));\n            }\n        }\n    },\n\n    backToList: function () {\n        this.loadScene(MainScene);\n    },\n\n    loadScene: function (url) {\n        if (this._isLoadingScene) {\n            return;\n        }\n\n        let result = cc.director.loadScene(url, this.onLoadSceneFinish.bind(this));\n        if (!result) {\n            this.storage.setCurrentScene('');\n            return;\n        }\n\n        this._isLoadingScene = true;\n\n        this.showReadme(null, false);\n        this.contentPos = this.testList.getContentPosition();\n\n        this.currentSceneUrl = url;\n\n\n        if (typeof cocosAnalytics !== 'undefined' && cocosAnalytics.isInited && cocosAnalytics.isInited()) {\n            // Cocos Analytics service, to learn more please visit:\n            // https://analytics.cocos.com/docs/\n            cocosAnalytics.CALevels.begin({\n                level: url\n            });\n        }\n    },\n\n    onLoadSceneFinish: function () {\n        let url = this.currentSceneUrl;\n        this.loadInstruction(url);\n        // record the last close scene \n        this.storage.setCurrentScene(url);\n\n        this.testList.node.active = false;\n\n        let isMenu = url.endsWith(MainScene);\n        this.btnBack.node.active = this.sceneTitle.node.active = !isMenu;\n        this.testList.node.active = isMenu;\n        if (isMenu) {\n            if (this.contentPos) {\n                this.testList.setContentPosition(this.contentPos);\n            }\n        }\n        else {\n            this.sceneTitle.string = url.replace('db://assets/cases/', '');\n        }\n\n        this._isLoadingScene = false;\n    },\n\n    _getAdjacentScenes () {\n        let res = { next: '', prev: '' };\n        let sceneList = this.sceneList.sceneList;\n\n        function findAvailableScene (startIndex, step) {\n            for (var i = startIndex; 0 <= i && i < sceneList.length; i += step) {\n                let url = sceneList[i].url;\n                if (url) {\n                    let sceneName = cc.path.basename(url, '.fire');\n                    let available = TipsManager.hasSupport(sceneName, true);\n                    if (available) {\n                        return url;\n                    }\n                }\n            }\n            return MainScene;\n        }\n\n        if (this.currentSceneUrl.endsWith(MainScene)) {\n            res.next = findAvailableScene(0, 1);\n            res.prev = findAvailableScene(sceneList.length - 1, -1);\n        }\n        else {\n            // findIndex\n            let i = -1;\n            sceneList.some((item, index) => {\n                if (item.url === this.currentSceneUrl) {\n                    i = index;\n                    return true;\n                }\n                return false;\n            });\n\n            if (i !== -1) {\n                res.next = findAvailableScene(i + 1, 1);\n                res.prev = findAvailableScene(i - 1, -1);\n            }\n        }\n        return res;\n    },\n\n    nextScene () {\n        let { next } = this._getAdjacentScenes();\n        if (next) {\n            this.loadScene(next);\n        }\n    },\n\n    prevScene () {\n        let { prev } = this._getAdjacentScenes();\n        if (prev) {\n            this.loadScene(prev);\n        }\n    },\n\n    loadInstruction: function (url) {\n        let self = this;\n        let urlArr = url.split('/');\n        let fileName = urlArr[urlArr.length - 1].replace('.fire', '');\n        cc.loader.loadRes('readme/' + fileName, cc.TextAsset, function (err, asset) {\n            if (err) {\n                self.text.string = i18n.t(\"scripts/Global/Menu.js.1\");\n                return;\n            }\n            self.text.string = asset.text;\n        });\n    },\n\n    showReadme: function (event, active) {\n        if (active === undefined) {\n            active = !this.readme.node.active;\n        }\n\n        this.readme.node.active = active;\n        if (active) {\n            this.readme.scrollToTop();\n        }\n\n        // en: fix Collider DebugDraw always displayed on top of the problem.\n        // zh：解决 Collider DebugDraw 一直显示在最上层的问题。\n        var enabledDebugDraw = cc.director.getCollisionManager().enabledDebugDraw;\n        if (this.readme.node.active) {\n            this.showDebugDraw = enabledDebugDraw;\n            cc.director.getCollisionManager().enabledDebugDraw = false;\n        }\n        else {\n            cc.director.getCollisionManager().enabledDebugDraw = this.showDebugDraw;\n        }\n\n        // en: fix Video Player always displayed on top of the problem.\n        // zh：修复 Video Player 一直显示在最上层的问题。\n        var videoPlayer = cc.find('Canvas/VideoPlayer');\n        if (videoPlayer) {\n            videoPlayer.active = !this.readme.node.active;\n        }\n    },\n\n    restart () {\n        cc.game.restart();\n    },\n    \n    gc () {\n        cc.sys.garbageCollect();\n    },\n});\n"]}
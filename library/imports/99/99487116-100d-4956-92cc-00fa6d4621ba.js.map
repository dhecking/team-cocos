{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\cases\\3d/assets\\cases\\3d\\raycast.js"],"names":["WHITE","cc","Color","Class","extends","Component","properties","mesh","Node","start","canvas","find","on","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","touchPos","results","event","touch","getLocation","raycast","pos","ray","Camera","main","getRay","geomUtils","intersect","node","update","dt","i","length","opacity","distance","d","vmath","vec3","normalize","v3","p","scaleAndAdd","o","position"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,QAAQC,GAAGC,KAAH,CAASF,KAAvB;;AAEAC,GAAGE,KAAH,CAAS;AACLC,aAASH,GAAGI,SADP;;AAGLC,gBAAY;AACRC,cAAMN,GAAGO;AADD,KAHP;;AAOL;;AAEA;;AAEAC,SAXK,mBAWI;AACL,YAAIC,SAAST,GAAGU,IAAH,CAAQ,QAAR,CAAb;AACAD,eAAOE,EAAP,CAAUX,GAAGO,IAAH,CAAQK,SAAR,CAAkBC,WAA5B,EAAyC,KAAKC,YAA9C,EAA4D,IAA5D;AACAL,eAAOE,EAAP,CAAUX,GAAGO,IAAH,CAAQK,SAAR,CAAkBG,UAA5B,EAAwC,KAAKC,WAA7C,EAA0D,IAA1D;AACAP,eAAOE,EAAP,CAAUX,GAAGO,IAAH,CAAQK,SAAR,CAAkBK,SAA5B,EAAuC,KAAKC,UAA5C,EAAwD,IAAxD;;AAEA,aAAKC,QAAL,GAAgB,IAAhB;AACA,aAAKC,OAAL,GAAe,EAAf;AACH,KAnBI;AAqBLN,gBArBK,wBAqBSO,KArBT,EAqBgB;AACjB,aAAKF,QAAL,GAAgBE,MAAMC,KAAN,CAAYC,WAAZ,EAAhB;AACH,KAvBI;AAyBLP,eAzBK,uBAyBQK,KAzBR,EAyBe;AAChB,aAAKF,QAAL,GAAgBE,MAAMC,KAAN,CAAYC,WAAZ,EAAhB;AACH,KA3BI;AA6BLL,cA7BK,sBA6BOG,KA7BP,EA6Bc;AACf,aAAKF,QAAL,GAAgB,IAAhB;AACH,KA/BI;AAiCLK,WAjCK,mBAiCIC,GAjCJ,EAiCS;AACV,YAAIC,MAAM1B,GAAG2B,MAAH,CAAUC,IAAV,CAAeC,MAAf,CAAsBJ,GAAtB,CAAV;AACA,eAAOzB,GAAG8B,SAAH,CAAaC,SAAb,CAAuBP,OAAvB,CAA+B,KAAKQ,IAApC,EAA0CN,GAA1C,CAAP;AACH,KApCI;AAsCLO,UAtCK,kBAsCGC,EAtCH,EAsCO;AACR,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKf,OAAL,CAAagB,MAAjC,EAAyCD,GAAzC,EAA8C;AAC1C,iBAAKf,OAAL,CAAae,CAAb,EAAgBH,IAAhB,CAAqBK,OAArB,GAA+B,GAA/B;AACH;AACD,aAAKjB,OAAL,CAAagB,MAAb,GAAsB,CAAtB;;AAEA,YAAI,CAAC,KAAKjB,QAAV,EAAoB;;AAEpB,YAAIO,MAAM1B,GAAG2B,MAAH,CAAUC,IAAV,CAAeC,MAAf,CAAsB,KAAKV,QAA3B,CAAV;AACA,YAAIC,UAAUpB,GAAG8B,SAAH,CAAaC,SAAb,CAAuBP,OAAvB,CAA+B,KAAKQ,IAApC,EAA0CN,GAA1C,CAAd;AACA,YAAIN,QAAQgB,MAAR,GAAiB,CAArB,EAAwB;AACpB;;AAEA,gBAAIE,WAAWlB,QAAQ,CAAR,EAAWkB,QAA1B;;AAEA,gBAAIC,IAAIvC,GAAGwC,KAAH,CAASC,IAAT,CAAcC,SAAd,CAAwB1C,GAAG2C,EAAH,EAAxB,EAAiCjB,IAAIa,CAArC,CAAR;AACA,gBAAIK,IAAI5C,GAAGwC,KAAH,CAASC,IAAT,CAAcI,WAAd,CAA0B7C,GAAG2C,EAAH,EAA1B,EAAmCjB,IAAIoB,CAAvC,EAA0CP,CAA1C,EAA6CD,QAA7C,CAAR;AACA,iBAAKhC,IAAL,CAAUyC,QAAV,GAAqBH,CAArB;AACH;AACD,aAAKxB,OAAL,GAAeA,OAAf;AACH;AA1DI,CAAT","file":"raycast.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\cases\\3d","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nconst WHITE = cc.Color.WHITE;\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        mesh: cc.Node\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n        var canvas = cc.find('Canvas');\n        canvas.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        canvas.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        canvas.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n\n        this.touchPos = null;\n        this.results = [];\n    },\n\n    onTouchStart (event) {\n        this.touchPos = event.touch.getLocation();\n    },\n\n    onTouchMove (event) {\n        this.touchPos = event.touch.getLocation();\n    },\n\n    onTouchEnd (event) {\n        this.touchPos = null;\n    },\n\n    raycast (pos) {\n        let ray = cc.Camera.main.getRay(pos);\n        return cc.geomUtils.intersect.raycast(this.node, ray);\n    },\n\n    update (dt) {\n        for (let i = 0; i < this.results.length; i++) {\n            this.results[i].node.opacity = 255;\n        }\n        this.results.length = 0;\n\n        if (!this.touchPos) return;\n\n        let ray = cc.Camera.main.getRay(this.touchPos);\n        let results = cc.geomUtils.intersect.raycast(this.node, ray);\n        if (results.length > 0) {\n            // results[0].node.opacity = 100;\n\n            let distance = results[0].distance;\n            \n            let d = cc.vmath.vec3.normalize(cc.v3(), ray.d);\n            let p = cc.vmath.vec3.scaleAndAdd(cc.v3(), ray.o, d, distance);\n            this.mesh.position = p;\n        }\n        this.results = results;\n    },\n});\n"]}